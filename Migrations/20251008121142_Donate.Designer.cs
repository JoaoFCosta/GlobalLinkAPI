// <auto-generated />
using System;
using GlobalLinkAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlobalLinkAPI.Migrations
{
    [DbContext(typeof(GlobalLinkDbContext))]
    [Migration("20251008121142_Donate")]
    partial class Donate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlobalLinkAPI.Models.Company", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaId"));

                    b.Property<string>("EmpresaBairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaCep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaComplemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaNumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaRua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaTelefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaId");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("GlobalLinkAPI.Models.Donate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyEmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRecebimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("NecessidadeId")
                        .HasColumnType("int");

                    b.Property<int?>("NeedNecessidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OngId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CompanyEmpresaId");

                    b.HasIndex("NeedNecessidadeId");

                    b.HasIndex("OngId");

                    b.ToTable("Donations", (string)null);
                });

            modelBuilder.Entity("GlobalLinkAPI.Models.Need", b =>
                {
                    b.Property<int>("NecessidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NecessidadeId"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NecessidadeDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NecessidadeTitulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OngId")
                        .HasColumnType("int");

                    b.Property<string>("Urgencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NecessidadeId");

                    b.HasIndex("OngId");

                    b.ToTable("Needs", (string)null);
                });

            modelBuilder.Entity("GlobalLinkAPI.Models.Ong", b =>
                {
                    b.Property<int>("OngId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OngId"));

                    b.Property<string>("OngBairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OngCep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OngCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OngComplemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OngEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OngNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OngNumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OngRua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OngSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OngTelefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OngId");

                    b.ToTable("Ongs", (string)null);
                });

            modelBuilder.Entity("GlobalLinkAPI.Models.Donate", b =>
                {
                    b.HasOne("GlobalLinkAPI.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyEmpresaId");

                    b.HasOne("GlobalLinkAPI.Models.Need", "Need")
                        .WithMany()
                        .HasForeignKey("NeedNecessidadeId");

                    b.HasOne("GlobalLinkAPI.Models.Ong", "Ong")
                        .WithMany()
                        .HasForeignKey("OngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Need");

                    b.Navigation("Ong");
                });

            modelBuilder.Entity("GlobalLinkAPI.Models.Need", b =>
                {
                    b.HasOne("GlobalLinkAPI.Models.Ong", "Ong")
                        .WithMany()
                        .HasForeignKey("OngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ong");
                });
#pragma warning restore 612, 618
        }
    }
}
